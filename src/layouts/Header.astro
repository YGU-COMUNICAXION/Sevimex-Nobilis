---
import { Bars3Icon, XMarkIcon } from "@heroicons/react/24/outline";
import { Image } from "astro:assets";

import svgLogo from "@assets/svg/logo.svg";

interface Props {
  type?: "default" | "transparent";
}

const { type = "default" } = Astro.props;
---

<header
  id="header"
  class="flex items-center justify-center
  z-20 fixed w-full left-0 right-0 bg-white transition-colors duration-300"
>
  <div
    class="container relative flex items-center justify-between gap-4 p-4 lg:p-0 lg:py-6 xl:py-6 md:px-0"
  >
    <div class="lg:hidden absolute">
      <Bars3Icon id="menu-icon" className="text-primary-1 size-8 lg:hidden" />
      <XMarkIcon
        id="close-icon"
        className="text-primary-1 hidden size-8 lg:hidden"
      />
    </div>

    <div
      class="w-full lg:w-auto
    flex items-center justify-center lg:justify-start"
    >
      <a
        href="/"
        class="flex items-center gap-2 lg:gap-4 text-primary-1 font-bold text-xl lg:text-2xl xl:text-3xl"
      >
        <Image class=`h-6 md:h-12 w-auto` src={svgLogo} alt="logo" />
      </a>
    </div>

    <nav
      id="navigator-menu"
      class="fixed -top-full left-0 right-0 lg:top-0 lg:left-auto lg:right-auto
      flex flex-col items-center justify-center shadow lg:shadow-none p-6 py-8 lg:p-0 lg:py-0
      transition-[top] duration-300 ease-in-out lg:transition-none
      lg:static lg:flex-1 lg:flex lg:items-center lg:gap-4 lg:pt-1 bg-white lg:bg-transparent"
      aria-label="Main navigation"
    >
      <ul
        class=`h-full container flex flex-col lg:flex-row items-center justify-end gap-8 lg:gap-14
        [&>li>a]:text-primary-1 lg:[&>li]:text-center
        [&>li>a]:relative [&>li>a]:uppercase [&>li]:inline-block
        font-normal text-base lg:text-lg xl:text-xl`
      >
        <li>
          <a href={"/#productos"}>Productos</a>
        </li>
        <li>
          <a href={"/#nosotros"}>Nosotros</a>
        </li>
        <li>
          <a href={"/#contacto"}>Contacto</a>
        </li>
        <li>
          <a
            class="px-4 py-2 rounded-full bg-primary-3 !text-neutral-3"
            href={"https://meetings.hubspot.com/jtorres44"}
            >Agenda presentaci√≥n</a
          >
        </li>
      </ul>
    </nav>
  </div>
</header>

<style>
  @reference "../styles/global.css";

  /* Colocar linea color roja del link activo por debajo del link, pero en desktop colocar la linea encima del link */
  #navigator-menu a:is(.active) {
    font-weight: 600;
  }
</style>

<script>
  // Verificar que el DOM este completamente cargado antes de ejecutar el script con la validacion de viewtransiottions de astro
  // con astro-load-page

  document.addEventListener("astro:page-load", () => {
    // Toggle navigation menu
    const barsIcon = document.querySelector("#menu-icon");
    const closeIcon = document.querySelector("#close-icon");
    const navigatorMenu = document.querySelector("#navigator-menu");
    const navigatorLinks = document.querySelector("#navigator-menu ul");
    const header = document.querySelector("#header");

    if (navigatorMenu === null || barsIcon === null || closeIcon === null) {
      throw new Error("Element not found");
    }

    barsIcon.addEventListener("click", () => {
      barsIcon.classList.toggle("hidden");
      closeIcon.classList.toggle("hidden");
      navigatorMenu.classList.toggle("top-16");
    });

    closeIcon.addEventListener("click", () => {
      closeIcon.classList.toggle("hidden");
      barsIcon.classList.toggle("hidden");
      navigatorMenu.classList.toggle("top-16");
    });

    // const path = window.location.pathname;
    // const links = navigatorLinks?.querySelectorAll("a");

    // links?.forEach((link) => {
    //   if (link.pathname === path) {
    //     console.log(link.pathname);
    //     link.classList.add("active");
    //   }
    // });
  });
</script>
