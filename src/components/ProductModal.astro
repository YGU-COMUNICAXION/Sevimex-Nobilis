---
// src/components/ProductModal.astro
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import ContactForm from "./ContactForm.astro";


const { product } = Astro.props;
---

<div
  id={`modal-${product.id}`}
  class="fixed inset-0 bg-black/50 z-50 flex items-center justify-center hidden"
>
  <div
    class="bg-white rounded-xl shadow-lg max-w-4xl
    px-16 py-16
    w-full p-6 relative overflow-y-auto max-h-[90vh]"
  >
    <button
      id={`close-modal-${product.id}`}
      class="close-modal absolute top-8 right-8 text-gray-500 hover:text-black hover:cursor-pointer text-3xl lg:text-4xl"
    >
      &times;
    </button>

    <div class="flex flex-col md:flex-row gap-16">
      <Image
        src={product.image}
        alt={product.name}
        class="w-40 object-contain"
      />

      <div class="flex-1">
        <h3 class="text-xl md:text-2xl font-bold text-primary-1 mb-3">
          {product.name}
        </h3>
        <p
          class="text-sm md:text-base text-neutral-2 mb-3"
          set:html={product.largeDescription}
        />
        <ul
          class="list-disc pl-5 text-sm md:text-base text-neutral-2 space-y-1 mb-4"
        >
          {product.features.map((item: string) => <li>{item}</li>)}
        </ul>
        <div class="flex flex-wrap gap-4">
          <a
            href={product.datasheetUrl}
            target="_blank"
            class="bg-primary-3 text-primary-1 font-semibold px-4 py-2 rounded-full text-sm hover:bg-sky-200"
          >
            FICHA TÉCNICA
          </a>
          <button
            id={`quote-button-${product.id}`}
            class="quote-button
            bg-primary-1 text-white px-4 py-2 rounded-full text-sm hover:bg-blue-800 hover:cursor-pointer lg:absolute bottom-8 right-8"
          >
            COTIZAR
          </button>
        </div>
      </div>
    </div>

    <div
      id={`form-${product.id}`}
      class="form-container hidden opacity-0 translate-y-4 transition-all duration-300"
    >
      <ContactForm variant="modal" />
    </div>
  </div>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    const closeModal = (modal: Element) => {
      const form = modal.querySelector(".form-container");
      const quoteButton = modal.querySelector(".quote-button");

      if (form) {
        form.classList.add("opacity-0", "translate-y-4");
        form.classList.remove("opacity-100", "translate-y-0");
        setTimeout(() => {
          form.classList.add("hidden");
        }, 300);
      }

      if (quoteButton) quoteButton.classList.remove("hidden");

      modal.classList.add("hidden");
    };

    // Botón cerrar
    document.querySelectorAll(".close-modal").forEach((btn) => {
      btn.addEventListener("click", () => {
        const modal = btn.closest("[id^='modal-']");
        if (modal) closeModal(modal);
      });
    });

    // Mostrar formulario + scroll hacia él
    document.querySelectorAll(".quote-button").forEach((btn) => {
      btn.addEventListener("click", () => {
        const modal = btn.closest("[id^='modal-']");
        const form = modal?.querySelector(".form-container");

        if (form) {
          form.classList.remove("hidden");

          requestAnimationFrame(() => {
            form.classList.remove("opacity-0", "translate-y-4");
            form.classList.add("opacity-100", "translate-y-0");

            // Scroll suave hacia el formulario
            form.scrollIntoView({ behavior: "smooth", block: "start" });
          });
        }

        btn.classList.add("hidden");
      });
    });

    // Click fuera del modal
    document.querySelectorAll("[id^='modal-']").forEach((modal) => {
      modal.addEventListener("click", (e) => {
        if (e.target === modal) {
          closeModal(modal);
        }
      });
    });
  });
</script>
